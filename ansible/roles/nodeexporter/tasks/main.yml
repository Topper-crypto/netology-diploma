- name: Check if node exporter exist
  stat:
    path: "{{ node_exporter_bin }}"
  register: check_node_exporter_present

- name: Create group
  group:
    name: "{{ node_exporter_group }}"
    state: present

- name: Create node exporter user
  user:
    name: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    shell: /usr/sbin/nologin
    system: true
    create_home: false

- name: Create node exporter config dir
  file:
    path: "{{ node_exporter_dir_conf }}"
    state: directory
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    mode: 0755

- name: If node exporter exist get version
  shell: "cat /etc/systemd/system/node_exporter.service | grep Version | sed s/'.*Version '//g"
  when: check_node_exporter_present.stat.exists
  changed_when: false
  register: get_node_exporter_version

- name: Download and unzip node exporter if not exist
  unarchive:
    src: "{{ node_exporter_link_download }}v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: true
    validate_certs: false

- name: Move the binary to the destination
  copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
    dest: "{{ node_exporter_bin }}"
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    mode: 0755
    remote_src: true
  when: not check_node_exporter_present.stat.exists or not get_node_exporter_version.stdout == node_exporter_version

- name: Clean
  file:
    path: /tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/
    state: absent

- name: Install service
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: 0755
  notify:
    - Reload daemon and restart node exporter

- name: Flush handlers
  meta: flush_handlers

- name: Service always started
  systemd:
    name: node_exporter
    state: started
    enabled: true
